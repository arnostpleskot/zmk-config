/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define DEFAULT 0
#define LAYER_NUMS 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  combos {
    compatible = "zmk,combos";

    // left
    combo_lbkt {
      timeout-ms = <50>;
      key-positions = <29 42>;
      bindings = <&kp LEFT_BRACKET>;
    };
    combo_lpar {
      timeout-ms = <50>;
      key-positions = <30 43>;
      bindings = <&kp LEFT_PARENTHESIS>;
    };
    combo_lbrc {
      timeout-ms = <50>;
      key-positions = <31 44>;
      bindings = <&kp LEFT_BRACE>;
    };

    // right
    combo_rbkt {
      timeout-ms = <50>;
      key-positions = <34 47>;
      bindings = <&kp RIGHT_BRACKET>;
    };
    combo_rpar {
      timeout-ms = <50>;
      key-positions = <33 46>;
      bindings = <&kp RIGHT_PARENTHESIS>;
    };
    combo_rbrc {
      timeout-ms = <50>;
      key-positions = <32 45>;
      bindings = <&kp RIGHT_BRACE>;
    };
  };

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &gresc    &kp Q      &kp W      &kp F       &kp P       &kp B                                                         &kp J              &kp L        &kp U        &kp Y        &kp SEMI   &kp BSLH
        &kp TAB   &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T &kp G                                                         &kp M              &hm RSHIFT N &hm RCTRL E  &hm LALT I   &hm RGUI O &kp SQT
        &kp LSHFT &kp Z      &hm LALT X &kp C       &kp D       &kp V   &kp LGUI  &to LAYER_NUMS      &to LAYER_NUMS &kp RGUI &kp K              &kp H        &kp COMMA    &hm RALT DOT &kp FSLH   &kp RALT
                                        &kp LEFT    &kp RIGHT   &kp ESC &kp SPACE &kp TAB             &kp ENTER      &kp BSPC &lt LAYER_NUMS DEL &kp UP       &kp DOWN
      >;
    };

    nums_layer {
      bindings = <
        &none &kp LEFT_BRACKET &kp N7 &kp N8 &kp N9       &kp RIGHT_BRACKET                               &none              &none      &none     &none    &none    &none
        &none &kp SEMICOLON    &kp N4 &kp N5 &kp N6       &kp EQUAL                                       &none              &kp RSHIFT &kp RCTRL &kp LALT &kp RGUI &none
        &none &kp GRAVE        &kp N1 &kp N2 &kp N3       &kp BACKSLASH     &none  &none      &none &none &none              &none      &none     &kp RALT &none    &none
                                      &none  &none        &none             &kp N0 &none      &none &none &lt LAYER_NUMS DEL &none      &none
      >;
    };
  };
};

// &trans &trans &trans &trans &trans &trans                                  &trans &trans &trans &trans &trans &trans
// &trans &trans &trans &trans &trans &trans                                  &trans &trans &trans &trans &trans &trans
// &trans &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans &trans &trans &trans
//                      &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans

// &none &none &none &none &none &none                              &none &none &none &none &none &none
// &none &none &none &none &none &none                              &none &none &none &none &none &none
// &none &none &none &none &none &none &none &none      &none &none &none &none &none &none &none &none
//                   &none &none &none &none &none      &none &none &none &none &none

